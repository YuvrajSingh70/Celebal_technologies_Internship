const fs = require('fs');
// crud
// create file -> append file, open, writefile

// 1.append

fs.appendFile('file1.txt', 'this is file 1', (err) => {
    if (err) {
        console.error('Error creating file 1:', err);
    } else {
        console.log('file1 created!');
    }
});
// 2.write file
// completley update the data
fs.writeFile('file2.txt', 'this is file 2', (err) => {
    if (err) {
        console.error('Error creating file 2:', err);
    } else {
        console.log('file2 is created');
    }
});


// 3. open file
fs.open('file3.txt', 'w', (err) => {
    if (err) {
        console.error('Error creating file 3:', err);
    } else {
        console.log('file3 created');
    }
});


// read operations = read file()

fs.readFile('file1.txt', 'utf-8', (err, data) => {
    if (err) {
        console.error('Error reading file 1:', err);
    } else {
        console.log(data);
    }
});




// updatefile = appendFile(), writeFile()
fs.appendFile('file1.txt', ' - updated content', (err) => {
    if (err) {
        console.error('Error updating file 1:', err);
    } else {
        console.log('file1 updated!');
    }
});


fs.writeFile('file2.txt', ' - updated content', (err) => {
    if (err) {
        console.error('Error updating file 2:', err);
    } else {
        console.log('file2 updated!');
    }
});



// delete = unlink
fs.unlink('file3.txt', (err) => {
    if (err) {
        console.error('Error deleting file 3:', err);
    } else {
        console.log('file3 deleted');
    }
});


// rename

fs.rename('file2.txt', 'renamed_file2.txt', (err) => {
    if (err) {
        console.error('Error renaming file2:', err);
    } else {
        console.log('file2 renamed');
    }
});




// create in javascript -> for synchronous
// append file
const fs = require('fs');

try {
  fs.appendFileSync('synchronous1.txt', 'this is file 1 created by me');
  console.log('File created and appended!');
} catch (err) {
  throw err;
}

//write file


try {
  fs.writeFileSync('synchronous2.txt', 'this is file 2 created by hitesh');
  console.log('File 2 is created.');
} catch (err) {
  throw err;
}

//open file


try {
  fs.openSync('file3.txt', 'w');
  console.log('File3 created.');
} catch (err) {
  throw err;
}



//read file operation


try {
  const data = fs.readFileSync('synchronous1.txt', 'utf-8');
  console.log(data);
} catch (err) {
  throw err;
}


//update file operation having two methods (append and write)


try {
  fs.appendFileSync('synchronous1.txt', 'this is file 1');
  console.log('File created and appended!');

  fs.writeFileSync('synchronous2.txt', 'written');
  console.log('File 2 is created.');
} catch (err) {
  throw err;
}


//delete file operation



try {
  fs.unlinkSync('file3.txt');
  console.log('File 3 deleted.');
} catch (err) {
  throw err;
}



// rename file operation


try {
  fs.renameSync('renamed_file2.txt', 'file2.txt');
  console.log('File name changed.');
} catch (err) {
  throw err;
}






 60 changes: 60 additions & 0 deletions60  
day 2/day 2/synchronous1.js
@@ -0,0 +1,60 @@
// here we perform the same crud operation for json file using synchronous way
const fs = require('fs');

// 1. Create (Append) - Create and append data to a JSON file
function createData(filename, data) {
  fs.appendFile(filename + '.json', JSON.stringify(data) + '\n', (err) => {
    if (err) {
      console.error('Error creating data:', err);
    } else {
      console.log('Data appended to', filename + '.json');
    }
  });
}

// 2. Read - Read data from a JSON file
function readData(filename) {
  fs.readFile(filename + '.json', 'utf-8', (err, data) => {
    if (err) {
      console.error('Error reading data:', err);
    } else {
      const jsonData = data.trim().split('\n').map(JSON.parse);
      console.log('Data from', filename + '.json:', jsonData);
    }
  });
}

// 3. Update - Update data in a JSON file
function updateData(filename, updatedData) {
  fs.writeFile(filename + '.json', JSON.stringify(updatedData) + '\n', (err) => {
    if (err) {
      console.error('Error updating data:', err);
    } else {
      console.log('Data updated in', filename + '.json');
    }
  });
}

// 4. Delete - Delete a JSON file
function deleteFile(filename) {
  fs.unlink(filename + '.json', (err) => {
    if (err) {
      console.error('Error deleting file:', err);
    } else {
      console.log(filename + '.json deleted');
    }
  });
}

// Example usage:
const filename = 'data'; 
const dataToCreate = { name: 'John Doe', age: 30 };
createData(filename, dataToCreate);

const updatedData = { name: 'hitesh agarwal', age: 20 };
updateData(filename, updatedData);

readData(filename);


deleteFile(filename);
